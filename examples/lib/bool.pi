#attach: cell.pi

#global: tt
#global: ff
#global: switch
#global: bool

c<<tt; ->c; t,f<-c; ->t.
c<<ff; ->c; t,f<-c; ->f.

! Switch (true/false) construction
c<<switch; +set_tt,set_ff,value,_set_tt,_set_ff,_val;(
  +init;init->_set_tt;<-init; set_tt,set_ff,value->c.

  ! Set switch to true for one _val request (may repeat itself)
  ack<<_set_tt;->ack; c<-_val;->c; repeat,t,<-c; +if,else;(
    +b;b->repeat;<-b; if,else->b.
    <-if;->_set_tt;->t.
    <-else;->t.
  )

  ! Same as _set_tt but for false
  ack<<_set_ff;->ack; c<-_val;->c; repeat,,f<-c; +if,else;(
    +b;b->repeat;<-b; if,else->b.
    <-if;->_set_ff;->f.
    <-else;->f.
  )

  ! Override current _val listener with new switch value.
  ready<<set_tt; +c;c->_val;<-c; ff,,->c; ready->_set_tt.
  ready<<set_ff; +c;c->_val;<-c; ff,,->c; ready->_set_ff.

  ! Public value request channel (repeats current value after each request)
  c<<value;->c; t,f<-c; +cc;cc->_val;<-cc; tt,t,f->cc.
)

! Switch using a cell.
c<<bool; +cc;cc->cell; get,set<-cc; +set_tt,set_ff,value;(
  ! Set to true initially.
  +init;init->set_ff;<-init; set_tt,set_ff,value->c.

  ! Setters
  ready<<set_tt; +a;a->set;<-a; tt->a;<-a; ->ready.
  ready<<set_ff; +a;a->set;<-a; ff->a;<-a; ->ready.

  ! Getter
  c<<value;->c; t,f<-c; +a;a->get; x<-a; +b;b->x;<-b; t,f->b.
)